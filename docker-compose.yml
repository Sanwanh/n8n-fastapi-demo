version: '3.8'

services:
  # 主要應用服務（整合 API + Web）
  market-analysis:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-}
    container_name: market-analysis-app
    ports:
      - "${SERVER_PORT:-8089}:8089"  # 統一服務端口
    environment:
      # 基本配置
      ENVIRONMENT: ${ENVIRONMENT:-production}
      DEBUG: ${DEBUG:-false}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}

      # 服務配置
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8089

      # Webhook 配置
      WEBHOOK_URL: ${WEBHOOK_URL:-https://beloved-swine-sensibly.ngrok-free.app/webhook-test/ef5ac185-f41a-4a2d-9a78-33d329184c2}
      WEBHOOK_TIMEOUT: 30

      # 時區設定
      TZ: Asia/Taipei
    volumes:
      # 資料持久化
      - ./logs:/app/logs
      - ./data:/app/data
      - ./backups:/app/backups
      - ./cache:/app/cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
    networks:
      - market-network

  # ngrok 服務 - 端口改為 4041
  ngrok:
    image: ngrok/ngrok:latest
    container_name: market-ngrok
    restart: unless-stopped
    command:
      - "http"
      - "market-analysis:8089"
      - "--authtoken"
      - "2zzNP5hnqCVT1EkLieXmLyNEUnX_7RqY7RwqEPheVpbbeRRX6"
    ports:
      - "4041:4040"
    environment:
      NGROK_AUTHTOKEN: 2zzNP5hnqCVT1EkLieXmLyNEUnX_7RqY7RwqEPheVpbbeRRX6
    depends_on:
      - market-analysis
    networks:
      - market-network

  # Redis 快取服務（可選）
  redis:
    image: redis:7-alpine
    container_name: market-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - market-network
    profiles:
      - redis

  # Prometheus 監控（可選）
  prometheus:
    image: prom/prometheus:latest
    container_name: market-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - market-network
    profiles:
      - monitoring

  # Grafana 儀表板（可選）
  grafana:
    image: grafana/grafana:latest
    container_name: market-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
      GF_USERS_ALLOW_SIGN_UP: false
    restart: unless-stopped
    networks:
      - market-network
    profiles:
      - monitoring

# 網路設定
networks:
  market-network:
    driver: bridge

# 資料卷
volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local